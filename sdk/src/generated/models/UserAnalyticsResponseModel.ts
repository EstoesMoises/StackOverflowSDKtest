/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class UserAnalyticsResponseModel {
    /**
    * User ID. The user\'s unique identifier.
    */
    'userId'?: number;
    /**
    * Total Questions. The total number of questions asked by the user.
    */
    'totalQuestions'?: number;
    /**
    * Total Answers. The total number of answers provided by the user.
    */
    'totalAnswers'?: number;
    /**
    * Total Comments. The total number of comments made by the user.
    */
    'totalComments'?: number;
    /**
    * Total Upvotes Received. The total number of upvotes received on user\'s content.
    */
    'totalUpvotesReceived'?: number;
    /**
    * Total Downvotes Received. The total number of downvotes received on user\'s content.
    */
    'totalDownvotesReceived'?: number;
    /**
    * Accepted Answers. The number of answers that were accepted.
    */
    'acceptedAnswers'?: number;
    /**
    * Average Question Score. The average score of the user\'s questions.
    */
    'averageQuestionScore'?: number;
    /**
    * Average Answer Score. The average score of the user\'s answers.
    */
    'averageAnswerScore'?: number;
    /**
    * Period Start. The start date of the analytics period.
    */
    'periodStart'?: Date;
    /**
    * Period End. The end date of the analytics period.
    */
    'periodEnd'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "userId",
            "baseName": "userId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalQuestions",
            "baseName": "totalQuestions",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalAnswers",
            "baseName": "totalAnswers",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalComments",
            "baseName": "totalComments",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalUpvotesReceived",
            "baseName": "totalUpvotesReceived",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalDownvotesReceived",
            "baseName": "totalDownvotesReceived",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "acceptedAnswers",
            "baseName": "acceptedAnswers",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "averageQuestionScore",
            "baseName": "averageQuestionScore",
            "type": "number",
            "format": "double"
        },
        {
            "name": "averageAnswerScore",
            "baseName": "averageAnswerScore",
            "type": "number",
            "format": "double"
        },
        {
            "name": "periodStart",
            "baseName": "periodStart",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "periodEnd",
            "baseName": "periodEnd",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return UserAnalyticsResponseModel.attributeTypeMap;
    }

    public constructor() {
    }
}
