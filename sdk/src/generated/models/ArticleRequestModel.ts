/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ArticlePermissionsRequestModel } from '../models/ArticlePermissionsRequestModel';
import { ArticleType } from '../models/ArticleType';
import { HttpFile } from '../http/http';

export class ArticleRequestModel {
    /**
    * Article title. The purpose of the article, stated briefly in one sentence.
    */
    'title': string;
    /**
    * Article body. The main content of the article in Markdown format.
    */
    'body': string;
    /**
    * Tags. Tags associated with the article.
    */
    'tags': Array<string>;
    'type': ArticleType;
    'permissions': ArticlePermissionsRequestModel;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "body",
            "baseName": "body",
            "type": "string",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ArticleType",
            "format": ""
        },
        {
            "name": "permissions",
            "baseName": "permissions",
            "type": "ArticlePermissionsRequestModel",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ArticleRequestModel.attributeTypeMap;
    }

    public constructor() {
    }
}


