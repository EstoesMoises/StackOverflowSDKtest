/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class FlagOptionResponseModel {
    /**
    * Flag option ID. Use this id when raising a flag.
    */
    'optionId'?: number | null;
    /**
    * Title of the dialog for flag selection.
    */
    'dialogTitle'?: string | null;
    /**
    * Title of the flagging option.
    */
    'title'?: string | null;
    /**
    * Description of the flagging option.
    */
    'description'?: string | null;
    /**
    * Indicates if the Comment field must be present when raising the flag.
    */
    'requiresComment'?: boolean;
    /**
    * Indicates if the TargetSite field must be present when raising the flag.
    */
    'requiresSite'?: boolean;
    /**
    * Indicates if the RelatedQuestionId field must be present when raising the flag.
    */
    'requiresQuestionId'?: boolean;
    /**
    * Indicates that the current user has already raised this flag.
    */
    'isRetraction'?: boolean;
    /**
    * Used to represend a list of sub options. Flag options that have sub options can not be selected when raising a flag.
    */
    'subOptions'?: Array<FlagOptionResponseModel> | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "optionId",
            "baseName": "optionId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "dialogTitle",
            "baseName": "dialogTitle",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "requiresComment",
            "baseName": "requiresComment",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "requiresSite",
            "baseName": "requiresSite",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "requiresQuestionId",
            "baseName": "requiresQuestionId",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isRetraction",
            "baseName": "isRetraction",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "subOptions",
            "baseName": "subOptions",
            "type": "Array<FlagOptionResponseModel>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return FlagOptionResponseModel.attributeTypeMap;
    }

    public constructor() {
    }
}
