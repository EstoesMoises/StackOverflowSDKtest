/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ArticleType } from '../models/ArticleType';
import { TagSummaryResponseModel } from '../models/TagSummaryResponseModel';
import { UserSummaryResponseModel } from '../models/UserSummaryResponseModel';
import { HttpFile } from '../http/http';

export class ArticleSummaryResponseModel {
    /**
    * ID. The article\'s unique identifier.
    */
    'id'?: number;
    'type'?: ArticleType;
    /**
    * Title. The actual article, stated briefly in one sentence.
    */
    'title'?: string;
    /**
    * Article body. The main content of the article in HTML format.
    */
    'body'?: string;
    /**
    * Tags. Tags associated with the article.
    */
    'tags'?: Array<TagSummaryResponseModel>;
    'owner'?: UserSummaryResponseModel;
    'lastEditor'?: UserSummaryResponseModel;
    /**
    * Creation date. The date and time the article was created.
    */
    'creationDate'?: Date;
    /**
    * Last activity date. The date and time the article or one of its answers last had significant activity. This includes (but is not limited to) an edit, rollback, change to tags, new answer, bounty added, bump.
    */
    'lastActivityDate'?: Date | null;
    /**
    * Score. Calculated by subtracting the number of downvotes from the number of upvotes
    */
    'score'?: number;
    /**
    * View count. The number of times users have viewed this article.
    */
    'viewCount'?: number;
    /**
    * URL. The article\'s direct URL.
    */
    'webUrl'?: string;
    /**
    * Share URL. The article\'s URL for sharing.
    */
    'shareUrl'?: string;
    /**
    * Is deleted. Returns true if the article was deleted.
    */
    'isDeleted'?: boolean;
    /**
    * Is obsolete. Returns true if the article was marked by a moderator as obsolete.
    */
    'isObsolete'?: boolean;
    /**
    * Is closed. Returns true if the article was closed by a moderator.
    */
    'isClosed'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ArticleType",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "body",
            "baseName": "body",
            "type": "string",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<TagSummaryResponseModel>",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "UserSummaryResponseModel",
            "format": ""
        },
        {
            "name": "lastEditor",
            "baseName": "lastEditor",
            "type": "UserSummaryResponseModel",
            "format": ""
        },
        {
            "name": "creationDate",
            "baseName": "creationDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "lastActivityDate",
            "baseName": "lastActivityDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "score",
            "baseName": "score",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "viewCount",
            "baseName": "viewCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "webUrl",
            "baseName": "webUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "shareUrl",
            "baseName": "shareUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "isDeleted",
            "baseName": "isDeleted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isObsolete",
            "baseName": "isObsolete",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isClosed",
            "baseName": "isClosed",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ArticleSummaryResponseModel.attributeTypeMap;
    }

    public constructor() {
    }
}


