/**
 * Stack Overflow for Teams API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class TagSummaryResponseModel {
    /**
    * ID. The tag\'s unique identifier.
    */
    'id'?: number;
    /**
    * Name. The tag\'s name.
    */
    'name'?: string;
    /**
    * Description. The tag\'s description.
    */
    'description'?: string;
    /**
    * PostCount. The number of posts that have this tag.
    */
    'postCount'?: number;
    /**
    * Subject Matter Expert Count. The total number of individual users who are SMEs for this tag.  This includes individual SMEs assigned, plus the members of any SME groups.  If null, SMEs are not enabled
    */
    'subjectMatterExpertCount'?: number | null;
    /**
    * WatcherCount. The number of users watching this tag.
    */
    'watcherCount'?: number;
    /**
    * CreationDate. The date and time the tag was created.
    */
    'creationDate'?: Date;
    /**
    * HasSynonyms. Returns true if the tag has synonym(s).
    */
    'hasSynonyms'?: boolean;
    /**
    * WebUrl. The web URL of the tag.
    */
    'webUrl'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "postCount",
            "baseName": "postCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "subjectMatterExpertCount",
            "baseName": "subjectMatterExpertCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "watcherCount",
            "baseName": "watcherCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "creationDate",
            "baseName": "creationDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "hasSynonyms",
            "baseName": "hasSynonyms",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "webUrl",
            "baseName": "webUrl",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TagSummaryResponseModel.attributeTypeMap;
    }

    public constructor() {
    }
}
