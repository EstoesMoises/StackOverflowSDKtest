name: Publish SDK to NPM
on:
  push:
    branches: ["main"]
    paths:
      - "sdk/**"
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'sdk/pnpm-lock.yaml'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        working-directory: ./sdk
        run: pnpm install --frozen-lockfile

      - name: Build package
        working-directory: ./sdk
        run: pnpm build

      - name: Check if version changed
        id: version-check
        working-directory: ./sdk
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          NPM_VERSION=$(npm view so-teams-sdk version 2>/dev/null || echo "0.0.0")
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "npm_version=$NPM_VERSION" >> $GITHUB_OUTPUT
          if [ "$PACKAGE_VERSION" != "$NPM_VERSION" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "Version changed from $NPM_VERSION to $PACKAGE_VERSION"
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $PACKAGE_VERSION"
          fi

      - name: Publish to NPM
        if: steps.version-check.outputs.should_publish == 'true'
        working-directory: ./sdk
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        if: steps.version-check.outputs.should_publish == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "sdk-v${{ steps.version-check.outputs.package_version }}"
          git push origin "sdk-v${{ steps.version-check.outputs.package_version }}"